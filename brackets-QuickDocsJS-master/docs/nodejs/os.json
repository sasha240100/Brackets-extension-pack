{"tmpdir":{"y":"os.tmpdir()","s":"<p>Returns the operating system&#39;s default directory for temp files.\n\n<\/p>\n","p":[]},"endianness":{"y":"os.endianness()","s":"<p>Returns the endianness of the CPU. Possible values are <code>&quot;BE&quot;<\/code> or <code>&quot;LE&quot;<\/code>.\n\n<\/p>\n","p":[]},"hostname":{"y":"os.hostname()","s":"<p>Returns the hostname of the operating system.\n\n<\/p>\n","p":[]},"type":{"y":"os.type()","s":"<p>Returns the operating system name.\n\n<\/p>\n","p":[]},"platform":{"y":"os.platform()","s":"<p>Returns the operating system platform.\n\n<\/p>\n","p":[]},"arch":{"y":"os.arch()","s":"<p>Returns the operating system CPU architecture.\n\n<\/p>\n","p":[]},"release":{"y":"os.release()","s":"<p>Returns the operating system release.\n\n<\/p>\n","p":[]},"uptime":{"y":"os.uptime()","s":"<p>Returns the system uptime in seconds.\n\n<\/p>\n","p":[]},"loadavg":{"y":"os.loadavg()","s":"<p>Returns an array containing the 1, 5, and 15 minute load averages.\n\n<\/p>\n<p>The load average is a measure of system activity, calculated by the operating\nsystem and expressed as a fractional number.  As a rule of thumb, the load\naverage should ideally be less than the number of logical CPUs in the system.\n\n<\/p>\n<p>The load average is a very UNIX-y concept; there is no real equivalent on\nWindows platforms.  That is why this function always returns <code>[0, 0, 0]<\/code> on\nWindows.\n\n<\/p>\n","p":[]},"totalmem":{"y":"os.totalmem()","s":"<p>Returns the total amount of system memory in bytes.\n\n<\/p>\n","p":[]},"freemem":{"y":"os.freemem()","s":"<p>Returns the amount of free system memory in bytes.\n\n<\/p>\n","p":[]},"cpus":{"y":"os.cpus()","s":"<p>Returns an array of objects containing information about each CPU\/core\ninstalled: model, speed (in MHz), and times (an object containing the number of\nmilliseconds the CPU\/core spent in: user, nice, sys, idle, and irq).\n\n<\/p>\n<p>Example inspection of os.cpus:\n\n<\/p>\n<pre><code>[ { model: &#39;Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz&#39;,\n    speed: 2926,\n    times:\n     { user: 252020,\n       nice: 0,\n       sys: 30340,\n       idle: 1070356870,\n       irq: 0 } },\n  { model: &#39;Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz&#39;,\n    speed: 2926,\n    times:\n     { user: 306960,\n       nice: 0,\n       sys: 26980,\n       idle: 1071569080,\n       irq: 0 } },\n  { model: &#39;Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz&#39;,\n    speed: 2926,\n    times:\n     { user: 248450,\n       nice: 0,\n       sys: 21750,\n       idle: 1070919370,\n       irq: 0 } },\n  { model: &#39;Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz&#39;,\n    speed: 2926,\n    times:\n     { user: 256880,\n       nice: 0,\n       sys: 19430,\n       idle: 1070905480,\n       irq: 20 } },\n  { model: &#39;Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz&#39;,\n    speed: 2926,\n    times:\n     { user: 511580,\n       nice: 20,\n       sys: 40900,\n       idle: 1070842510,\n       irq: 0 } },\n  { model: &#39;Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz&#39;,\n    speed: 2926,\n    times:\n     { user: 291660,\n       nice: 0,\n       sys: 34360,\n       idle: 1070888000,\n       irq: 10 } },\n  { model: &#39;Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz&#39;,\n    speed: 2926,\n    times:\n     { user: 308260,\n       nice: 0,\n       sys: 55410,\n       idle: 1071129970,\n       irq: 880 } },\n  { model: &#39;Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz&#39;,\n    speed: 2926,\n    times:\n     { user: 266450,\n       nice: 1480,\n       sys: 34920,\n       idle: 1072572010,\n       irq: 30 } } ]<\/code><\/pre>\n","p":[]},"networkInterfaces":{"y":"os.networkInterfaces()","s":"<p>Get a list of network interfaces:\n\n<\/p>\n<pre><code>{ lo0: \n   [ { address: &#39;::1&#39;, family: &#39;IPv6&#39;, internal: true },\n     { address: &#39;fe80::1&#39;, family: &#39;IPv6&#39;, internal: true },\n     { address: &#39;127.0.0.1&#39;, family: &#39;IPv4&#39;, internal: true } ],\n  en1: \n   [ { address: &#39;fe80::cabc:c8ff:feef:f996&#39;, family: &#39;IPv6&#39;,\n       internal: false },\n     { address: &#39;10.0.1.123&#39;, family: &#39;IPv4&#39;, internal: false } ],\n  vmnet1: [ { address: &#39;10.99.99.254&#39;, family: &#39;IPv4&#39;, internal: false } ],\n  vmnet8: [ { address: &#39;10.88.88.1&#39;, family: &#39;IPv4&#39;, internal: false } ],\n  ppp0: [ { address: &#39;10.2.0.231&#39;, family: &#39;IPv4&#39;, internal: false } ] }<\/code><\/pre>\n","p":[]}}
