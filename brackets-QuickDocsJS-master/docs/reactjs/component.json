{"render":{"s":"The render() method is required. <br>When called, it should examine <code>this.props</code> and <code>this.state</code> and return a single child component. This child component can be either a virtual representation of a native DOM component (such as <code>&lt;div /&gt;</code> or <code>React.DOM.div()</code>) or another composite component that you've defined yourself.<br>You can also return <code>null</code> or <code>false</code> to indicate that you don't want anything rendered. Behind the scenes, React renders a <code>&lt;noscript&gt;</code> tag to work with our current diffing algorithm. When returning <code>null</code> or <code>false</code>, <code>this.getDOMNode()</code> will return <code>null</code>.","y":"ReactComponent render()","p":null,"r":{"d":"return null or false if you don't want to render anything. Otherwise return the HTML element you want to render.","type":"Boolean|HTML"},"url":"http://facebook.github.io/react/docs/component-specs.html#render"},"getInitialState":{"s":"Invoked once before the component is mounted.","y":"object getInitialState()","p":null,"r":{"d":"The return value will be used as the initial value of <code>this.state</code>","type":"Object"},"url":"http://facebook.github.io/react/docs/component-specs.html#getinitialstate"},"getDefaultProps":{"s":"Invoked once and cached when the class is created. Values in the mapping will be set on <code>this.props</code> if that prop is not specified by the parent component (i.e. using an <code>in</code> check).<br>This method is invoked before any instances are created and thus cannot rely on <code>this.props</code>. In addition, be aware that any complex objects returned by <code>getDefaultProps()</code> will be shared across instances, not copied.","y":"object getDefaultProps()","p":null,"r":{"d":"The return value will be used as the default value of <code>this.props</code>","type":"Object"},"url":"http://facebook.github.io/react/docs/component-specs.html#getdefaultprops"},"componentWillMount":{"s":"Invoked once, both on the client and server, immediately before the initial rendering occurs. If you call <code>setState</code> within this method, <code>render()</code> will see the updated state and will be executed only once despite the state change","y":"componentWillMount()","p":null,"url":"http://facebook.github.io/react/docs/component-specs.html#mounting-componentwillmount"},"componentDidMount":{"s":"Invoked once, only on the client (not on the server), immediately after the initial rendering occurs. At this point in the lifecycle, the component has a DOM representation which you can access via <code>this.getDOMNode()</code>.<br>If you want to integrate with other JavaScript frameworks, set timers using <code>setTimeout</code> or <code>setInterval</code>, or send AJAX requests, perform those operations in this method.","y":"componentDidMount()","p":null,"url":"http://facebook.github.io/react/docs/component-specs.html#mounting-componentdidmount"},"componentWillReceiveProps":{"s":"Invoked when a component is receiving new props. This method is not called for the initial render.<br>Use this as an opportunity to react to a prop transition before <code>render()</code> is called by updating the state using <code>this.setState()</code>. The old props can be accessed via <code>this.props</code>. Calling <code>this.setState()</code> within this function will not trigger an additional render.","y":"componentWillReceiveProps: function(nextProps) {<br> this.setState({<br>  likesIncreasing: nextProps.likeCount > <br>  this.props.likeCount<br> }); <br>}","p":[{"t":"nextProps","type":"object","d":"The new props"}],"url":"http://facebook.github.io/react/docs/component-specs.html#updating-componentwillreceiveprops"},"shouldComponentUpdate":{"s":"Invoked before rendering when new props or state are being received. This method is not called for the initial render or when <code>forceUpdate</code> is used.<br>Use this as an opportunity to <code>return false</code> when you&#39;re certain that the transition to the new props and state will not require a component update.<br>If <code>shouldComponentUpdate</code> returns false, then <code>render()</code> will be completely skipped until the next state change. (In addition, <code>componentWillUpdate</code> and <code>componentDidUpdate</code> will not be called.)<br>By default, <code>shouldComponentUpdate</code> always returns true to prevent subtle bugs when <code>state</code> is mutated in place, but if you are careful to always treat <code>state</code> as immutable and to read only from <code>props</code> and <code>state</code> in <code>render()</code> then you can override <code>shouldComponentUpdate</code> with an implementation that compares the old props and state to their replacements.<br>If performance is a bottleneck, especially with dozens or hundreds of components, use <code>shouldComponentUpdate</code> to speed up your app.","y":"shouldComponentUpdate: function(nextProps, nextState) { <br>  return nextProps.id !== this.props.id;<br>}","p":[{"t":"nextProps","type":"object","d":"The new props"},{"t":"nextStae","type":"object","d":"The new states"}],"url":"http://facebook.github.io/react/docs/component-specs.html#updating-shouldcomponentupdate"},"componentWillUpdate":{"s":"Invoked immediately before rendering when new props or state are being received. This method is not called for the initial render.<br>Use this as an opportunity to perform preparation before an update occurs.","y":"componentWillUpdate(object nextProps, object nextState)","p":[{"t":"nextProps","type":"object","d":"The new props"},{"t":"nextStae","type":"object","d":"The new states"}],"url":"http://facebook.github.io/react/docs/component-specs.html#updating-componentwillupdate"},"componentDidUpdate":{"s":"Invoked immediately after updating occurs. This method is not called for the initial render.<br>Use this as an opportunity to operate on the DOM when the component has been updated.","y":"componentDidUpdate(object prevProps, object prevState)","p":[{"t":"nextProps","type":"object","d":"The old props"},{"t":"nextStae","type":"object","d":"The old states"}],"url":"http://facebook.github.io/react/docs/component-specs.html#updating-componentdidupdate"},"componentWillUnmount":{"s":"Invoked immediately before a component is unmounted from the DOM.<br>Perform any necessary cleanup in this method, such as invalidating timers or cleaning up any DOM elements that were created in <code>componentDidMount</code>.","y":"componentWillUnmount()","p":null,"url":"http://facebook.github.io/react/docs/component-specs.html#unmounting-componentwillunmount"}}